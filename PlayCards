package toucansFinalProject;

import java.util.ArrayList;
import java.util.Scanner;

// NOTES: I have assigned the methods. I thought it best to break them into: 
// DECK/HAND MECHANICS: ALEX
// SCORING/WINNING/GAMEFLOW: WILL
// GAMEPLAY/LOGIC/GUI: GABRIEL
// DISCARDING/END OF TURN: Jonathan
// I created th Run and Set classes. I expect they will need methods for the GAMEPLAY/LOGIC piece

public class PlayCards {

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		ArrayList<Player> players = new ArrayList<Player>();
		
		System.out.println("Welcome to Toucans Multi-Player Rummy");
		System.out.println("Would you like to: "
				+ "\n1. Start a new game?\nExit");
		int mainMenu=scan.nextInt();
		if (mainMenu==2){
				System.exit(0);
		}
		boolean more = true;

		while (more) {

			System.out.println("How many players will be playing this game (2-6)?");
			int numPlay = scan.nextInt();
			getNames(numPlay, players);
			// send the numPlayers to a method to determine amount of cards to be dealt DONE
			// based on # of players DONE
			int numCards = handSize(numPlay);

			// create a deck of cards DONE
			DeckOfCards deck = newDeck();

			// deal each player a hand (dependent on numPlay) DONE
			for (int i=0;i<numPlay;i++) {
				players.get(i).setHand(getHand(numCards, deck));
			}
			
			

			// flip top card into discard and create deck for discard pile at beginning of
			// game DONE
			DeckOfCards discard = new DeckOfCards();
			Card top =(deck.drawCard());
			ArrayList<Card> temp = new ArrayList<Card>();
			temp.add(top);
			discard.setDeck(temp);
						
			
			System.out.println("How many points would you like to play to? ");
			int points = scan.nextInt();
			// set points for game DONE
			

			SADASD
			while (winnerScore < points) {

				for (int i = 0; i < players.size(); i++) {
					Player currentPlayer = players.get(i);
					int selection = 0;
					while (selection != 1|| selection != 2) {
						selection = menuPhase1(currentPlayer);
						if (selection == 1) {
							// if deck is out of cards reshuffle all but top card of discard pile into new deck object #1PC_ALEX
							// draw from the deck add to players hand #2PC_ALEX
						} else if (selection == 2) {
							// draw from discard add to players hand #3PC_ALEX
							// keep track of this card, they are not allowed to discard it this turn #4PC_Jonathan
						} else if (selection == 3) {
							System.out.println(currentPlayer.getHand().displayHand());
						} else if (selection == 4) {
							// display sets/runs played on table #5PC_GABRIEL
						} else if (selection == 5) {
							System.out.println("Thanks for playing Toucan's Rummy!");
							System.exit(0);
						} else {
							System.out.println("Please pick an option 1-5)...");
						}

					}
					int selection2 = 0;
					while (selection2 != 4) {
						selection2 = menuPhase2();
						if (selection2 == 1) {
							// lay a card down? #6PC_GABRIEL
								// into existing run #7PC_GABRIEL
								// into existing set #8PC_GABRIEL
								// new run #9PC_GABRIEL
								// new set #10PC_GABRIEL
							
							// check if hand = 0 player won round #11PC_WILL
							// tabulate scores #12PC_WILL
							// if played all cards at once 2x score #13PC_WILL
							// check player scores for game winner #14PC_WILL
						} else if (selection2 == 2) {
							System.out.println(currentPlayer.getHand().displayHand());
						} else if (selection2 == 3) {
							// display sets/runs played on table #5PC_GABRIEL
						} else if (selection2 == 4) {
							// done 4 ENDS WHILE LOOP
						} else if (selection2 == 5) {
							System.out.println("Thanks for playing Toucan's Rummy!");
							System.exit(0);
						} else {
							System.out.println("Please pick an option 1-5)...");
						}
					}
					int selection3 = 0;
					while (selection3 != 1) {
						selection3 = menuPhase3();
						if (selection3 == 1) {
							// allow the player to select a card and discard it to the discard pile #15PC_Jonathan
								// check VS Card drawn tracked in item #4PC_Jonathan
							// pass to next player DONE: HANDLED BY WHILE LOOP ENDING AT 1
						} else if (selection3 == 2) {
							System.out.println(currentPlayer.getHand().displayHand());
						} else if (selection2 == 3) {
							// display sets/runs played on table #5PC_GABRIEL
						} else if (selection2 == 4) {
							System.out.println("Thanks for playing Toucan's Rummy!");
							System.exit(0);
						} else {
							System.out.println("Please pick an option 1-4)...");
						}

					}
				}
				
				// check player scores vs game score to see if game has ended, update winnerPoints, #15PC_WILL
			}
			System.out.println("The winner of that round was <playerName> with a total of <winnerPoints>.");
			System.out.println("Play again (true/false)? ");
			more = scan.nextBoolean();

		}
		System.out.println("Thanks for playing Toucan's Rummy!");
		
	}

	public static void getNames(int c, ArrayList<Player> p) {
		Scanner scan = new Scanner(System.in);

		for (int i = 0; i < c; i++) {
			System.out.println("What is player " + (i + 1) + "'s name? ");
			String name = scan.nextLine();
			Player player = new Player(name, 0);
			p.add(player);

		}
	}

	public static int handSize(int nP) {
		int handSize = 0;
		if (nP < 3) {
			handSize = 10;
		} else if (nP < 5) {
			handSize = 7;
		} else if (nP >= 5) {
			handSize = 6;
		}
		return handSize;
	}

	public static DeckOfCards newDeck() {
		DeckOfCards deck = new DeckOfCards();
		deck.shuffle();
		return deck;
	}
	
	public static Hand getHand(int nC, DeckOfCards d) {
		Hand hand = new Hand();
		ArrayList<Card> cards = new ArrayList<Card>();
		for (int i = 0; i < nC; i++) {
			cards.add(d.drawCard());
		}
		hand.setCards(cards);
		return hand;

	}

	public static int menuPhase1(Player p) {
		int selection = 0;
		Scanner scan = new Scanner(System.in);

		System.out.println(p.getName() + ", it's your turn: ");
		
		System.out.println("What would you like to do? ");

		System.out.println("1. Draw from the deck");
		System.out.println("2. Draw top card from the discard pile");
		System.out.println("3. What cards are in my hand?");
		System.out.println("4. What runs are on the table?");
		System.out.println("5. Exit game");
		System.out.println("\nWhich option would like?");
		selection = scan.nextInt();
		return selection;
	}

	public static int menuPhase2() {
		int selection = 0;
		Scanner scan = new Scanner(System.in);
		System.out.println("What would you like to do? ");
		System.out.println("1. Play or add to a set from my hand");
		System.out.println("2. What cards are in my hand? ");
		System.out.println("3. What runs are on the table?");
		System.out.println("4. Done, select a card to discard and pass turn");
		System.out.println("5. Exit game");
		System.out.println("\nWhich option would like?");
		selection = scan.nextInt();
		return selection;
	}

	public static int menuPhase3() {
		int selection = 0;
		Scanner scan = new Scanner(System.in);
		System.out.println("What would you like to do? ");
		System.out.println("1. Select a card to discard and pass turn");
		System.out.println("2. What cards are in my hand? ");
		System.out.println("3. What runs are on the table?");
		System.out.println("5. Exit game");
		System.out.println("\nWhich option would like?");
		selection = scan.nextInt();
		return selection;
	}



}
